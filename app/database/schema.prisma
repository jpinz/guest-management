datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Organization {
  id           String  @id @default(uuid())
  contactEmail String
  name         String
  users        User[]
  Event        Event[]
}

model User {
  id                  String          @id @default(uuid())
  email               String          @unique
  name                String
  gradYear            Int
  rushClass           Int
  organization        Organization    @relation(fields: [organizationId], references: [id])
  organizationId      String
  role                Role
  hasSocialPermission Boolean         @default(false)
  personalGuests      PersonalGuest[]
  eventGuests         EventGuest[]
}

model Event {
  id             String       @id @default(uuid())
  title          String
  eventType      EventType
  date           DateTime
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String
  guests         EventGuest[]
}

model PersonalGuest {
  id        String   @id @default(uuid())
  name      String
  gender    Gender
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    String
}

model EventGuest {
  id        String    @id @default(uuid())
  name      String
  gender    Gender
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  checkedIn DateTime?
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    String
  event     Event     @relation(fields: [eventId], references: [id])
  eventId   String
}

enum Role {
  UNVERIFIED
  USER
  RISK
  SOCIAL
  SOCIAL_PLUS
  ADMIN
}

enum EventType {
  SOCIAL
  PARTY
  SEMIFORMAL
}

enum Gender {
  MALE
  FEMALE
  OTHER
}
